<div
        className={`${styles.modal} ${isExpanded ? styles.expandedModal : ''}`}
      >
        <div className={styles.modalLeft}>
          <div className={styles.modalHeader}>
            <MdFeedback size={30} />
            <div className={styles.title}>Feedback</div>
            <div
              className={styles.detailButton}
              onClick={() => setIsExpanded(!isExpanded)}
            >
              {isExpanded ? 'Less Details' : 'More Details'}
            </div>
            <div className={styles.closeIcon} onClick={closeModal}>
              <IoIosCloseCircle size={30} />
            </div>
          </div>

          <div className={styles.dash}></div>

          <div className={styles.subHeader}>
            <MdFeedback size={20} />
            How would you grade your experience?
          </div>
          <CircleRating onSelect={setRating} />

          {isExpanded && (
            <>
              {/* UI Rating */}
              <div className={styles.subHeader}>
                <MdOutlineDesignServices size={20} />
                Rate UI
              </div>
              <CircleRating onSelect={setUiRating} />

              <div className={styles.subHeader}>
                <BiUser size={20} />
                Rate UX
              </div>
              <CircleRating onSelect={setUxRating} />

              <div className={styles.subHeader}>
                <MdOutlineVerifiedUser size={20} />
                Verification Score
              </div>
              <CircleRating onSelect={setVerificationRating} />
            </>
          )}

          <div id="tags_title" className={styles.subHeader}>
            <MdFeedback size={20} />
            Your Feedback
          </div>

          <div className={styles.feedbackTags}>
            {predefinedFeedback.map((tag) => (
              <div
                key={tag}
                className={`${styles.feedbackTag} ${
                  selectedTags.includes(tag) ? styles.selected : ''
                }`}
                onClick={() => toggleTag(tag)}
              >
                {tag}
              </div>
            ))}
          </div>
          <div className={styles.resultButton}>Send</div>
        </div>

        {isExpanded && (
          <div className={styles.modalRight}>
            <div className={styles.modalHeader}>
              <div className={styles.title}> Fotoverifier</div>

              <div className={styles.closeIcon} onClick={closeModal}>
                <IoIosCloseCircle size={30} />
              </div>
            </div>

            <div className={styles.dash}></div>

            <div className={styles.feedbackTags}>
              {predefinedFeedback.map((tag) => (
                <div
                  key={tag}
                  className={`${styles.feedbackTag} ${
                    selectedTags.includes(tag) ? styles.selected : ''
                  }`}
                  onClick={() => toggleTag(tag)}
                >
                  {tag}
                </div>
              ))}
            </div>
            <textarea
              className={styles.textInput}
              placeholder="Write additional feedback here..."
              value={feedback}
              onChange={(e) => setFeedback(e.target.value)}
            />
            <label htmlFor="imageUpload" className={styles.imageUpload}>
              Click to Upload Images
              <input
                type="file"
                id="imageUpload"
                accept="image/*"
                multiple
                hidden
                onChange={handleImageUpload}
              />
            </label>

            {/* Display Uploaded Images */}
            {uploadedImages.length > 0 && (
              <div className={styles.uploadedImages}>
                {uploadedImages.map((imgSrc, index) => (
                  <img key={index} src={imgSrc} alt="Uploaded" />
                ))}
              </div>
            )}
            <div className={styles.resultButton}>Send</div>
          </div>
        )}
      </div>